# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = migrations

# template for migration file names
# file_template = %%(rev)s_%%(slug)s

# timezone to use when rendering timestamps
# timezone =

# data to pass to revision templates
# revision_environment = false

# set to true to snapshot versions in memory on startup
# sourceless = false

# comma-separated list of package names to scan for models
# for importing into the env.py script
# models_packages =

# set to true to require a message for all revisions
# require_revision_message = false

[post_write_hooks]
# post_write_hooks = a, b, c
# a.type = exec
# a.entrypoint = my_program
# a.options = --verbose
# b.type = module
# b.entrypoint = my.module:my_function
# c.type = ...

#
# Database configuration
#
# sqlalchemy.url = driver://user:pass@localhost/dbname
#
# For production, use environment variables for database credentials
# For local development, you can uncomment the SQLite line
# sqlalchemy.url = sqlite:///chimera_intel.db
sqlalchemy.url = postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}


# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S